// Generated by CoffeeScript 1.8.0
(function() {
  var define_controller;

  define('account', function(require) {
    var doc_plugin;
    return doc_plugin = {
      type: 'plugin',
      title: 'Account',
      order: -14,
      icon: 'icon-cog',
      init: function() {
        var owner, owner_email, url;
        owner = Nimbus.realtime.c_file.owners[0];
        owner_email = owner.emailAddress || owner.email;
        url = "http://192.241.167.76:4001/order?email=" + owner_email;
        $.ajax({
          'url': url,
          success: function(data) {
            var user;
            if (data) {
              user = data;
              foundry._owner_plan = Number(user.order.type);
            } else {
              user = false;
              foundry._owner_plan = 0;
            }
            foundry._owner_plan_data = user;
            return foundry.initialized('account');
          }
        });
        define_controller();
      }
    };
  });

  define_controller = function() {
    return angular.module('foundry').controller('AccountController', [
      '$scope', '$rootScope', '$foundry', '$filter', '$http', function($scope, $rootScope, $foundry, $filter, $http) {
        var chosenPlan, payment_gate, plan_to_usernumber, request_purchase, stripeHandler, stripePublishable;
        $rootScope.breadcum = 'Account';
        $scope.current_user_role = foundry._user_list[foundry._current_user.id].role;
        chosenPlan = 'fourm_1';
        stripePublishable = 'pk_test_7rdDmdjKakyzgi9ClecAIPTa';
        stripeHandler = StripeCheckout.configure({
          key: stripePublishable,
          image: 'assets/img/nimbus_favicon.png',
          token: function(token) {
            return $.ajax({
              url: "http://192.241.167.76:4001/charge?token=" + token.id + "&email=" + Nimbus.Share.get_user_email() + "&plan=" + chosenPlan,
              success: function(data) {
                return window.location.reload();
              }
            });
          }
        });
        plan_to_usernumber = {
          0: "10",
          1: "25",
          2: "50",
          3: "infinite"
        };
        payment_gate = 'http://192.241.167.76:4000/buy/';
        $scope.get_plan = function() {
          return foundry._owner_plan;
        };
        $scope.usernumber = plan_to_usernumber[foundry._owner_plan];
        $scope.users = Nimbus.keys(foundry._user_list).length;
        $scope.is_current_plan = function(plan) {
          if (plan === $scope.get_plan()) {
            return 'current';
          } else if (plan > $scope.get_plan()) {
            return 'up';
          } else {
            return 'down';
          }
        };
        if (foundry.get_setting("email") == null) {
          $scope.setting_email = true;
        } else {
          $scope.setting_email = foundry.get_setting("email");
        }
        $scope.setting_email_change = function(status) {
          console.log("called");
          return foundry.set_setting("email", status);
        };
        request_purchase = function(level, text) {
          chosenPlan = "forum_" + level;
          stripeHandler.open({
            name: text.name,
            description: text.description,
            email: foundry._current_user.email
          });
        };
        $scope.cancel_plan = function() {
          return $http.get('http://192.241.167.76:4001/cancel?email=' + foundry._current_user.email).success(function() {
            return foundry._owner_plan = 0;
          });
        };
        $scope.change_plan = function(level) {
          var plans;
          plans = [
            {
              name: 'Business Plan',
              description: 'For 10-25 employees',
              amount: '1000'
            }, {
              name: 'Foundry Plan',
              description: 'For 25-50 employees',
              amount: '2500'
            }, {
              name: 'Ultimate Plan',
              description: 'For more than 50 employees',
              amount: '5000'
            }
          ];
          return request_purchase(level, plans[level - 1]);
        };
        return window.a_scope = $scope;
      }
    ]);
  };

}).call(this);
