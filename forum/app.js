// Generated by CoffeeScript 1.8.0
(function() {
  if (localStorage["version"] == null) {
    localStorage["version"] = "google";
    window.location.reload();
  }

  foundry.supportEmail = 'admin@nimbusfoundry.com,admin@nimbusbase.com';

  foundry.angular.dependency = [];

  define('config', function() {
    var config;
    config = {};
    config.appName = 'Forum';
    config.plugins = {
      forum: 'forum/plugins/forum',
      account: 'forum/plugins/account',
      user: 'forum/plugins/user',
      workspace: 'forum/plugins/workspace',
      support: 'core/plugins/support'
    };
    return config;
  });

  foundry.load_plugins();

  Nimbus.Auth.setup({
    'GDrive': {
      'app_id': '965255374748',
      'key': '965255374748-s2ln5arng133cj8goqu0s6gvfsp2to99.apps.googleusercontent.com',
      "scope": "openid https://www.googleapis.com/auth/drive https://www.googleapis.com/auth/plus.me https://www.googleapis.com/auth/gmail.compose https://www.googleapis.com/auth/gmail.modify https://apps-apis.google.com/a/feeds/domain/"
    },
    "app_name": "forum",
    'synchronous': false,
    "Firebase": {
      key: 'foundry-forum',
      app_name: 'Foundry',
      anonymous: true
    },
    'DynamoDB': {
      'Google': {
        'app_id': '195693500289',
        'client_id': '195693500289.apps.googleusercontent.com',
        "scope": "https://www.googleapis.com/auth/plus.login"
      },
      "app_name": "N05FC192-A6CF-B6BD94C3",
      "region": "us-west-2"
    }
  });

  Nimbus.Auth.auth_callback = function() {
    $('#loading .identity-form').slideUp('fast');
    return $("#login_buttons").addClass("redirect");
  };

  foundry.ready(function() {
    var config, state;
    config = foundry.parse_open_url();
    if (config) {
      if (config.space) {
        localStorage.last_open_workspace = config.space;
      }
      if (config.topic) {
        localStorage.to_open_topic = config.topic;
      }
      state = {
        title: document.title,
        url: location.href.replace(location.search, ''),
        otherkey: {}
      };
      window.history.pushState(state, document.title, state.url);
    }
    if (Nimbus.Auth.authorized()) {
      foundry.init(function() {
        $('#loading').addClass('loaded');
        return $("#login_buttons").removeClass("redirect");
      });
    }
  });

  $(document).ready(function() {

    /*
    	form action
     */
    $('.register-form-toggle').on('click', function(evt) {
      evt.preventDefault();
      $('.l-form-container').animate({
        top: '-146px'
      });
      return false;
    });
    $('.login-form-toggle').on('click', function(evt) {
      evt.preventDefault();
      $('.l-form-container').animate({
        top: '0px'
      });
      return false;
    });

    /*
    	handle login event
     */
    $('#firebase_login_btn').on('click', function(evt) {
      var data;
      data = {
        email: $('.l-form-container .login input[name="email"]').val(),
        password: $('.l-form-container .login input[name="passwd"]').val(),
        provider: 'password'
      };
      Nimbus.Auth.authorize('Firebase', data);
      evt.preventDefault();
      return false;
    });

    /*
    	handle register event
     */
    $('#firebase_register_btn').on('click', function(evt) {
      var data, server;
      data = {
        email: $('.l-form-container .register input[name="register"]').val(),
        password: $('.l-form-container .register input[name="password"]').val()
      };
      Nimbus.Auth.sync_services.Firebase.service = 'Firebase';
      Nimbus.Auth.setup(JSON.stringify(Nimbus.Auth.sync_services.Firebase));
      server = Nimbus.Firebase.server;
      Nimbus.Client.Firebase.createUser(data, function(res) {
        if (!res.error) {
          bootbox.alert('Your account has been created, you can sign in now.', function() {
            Nimbus.Auth.authorize('Firebase', {
              'email': data.email,
              'password': data.password,
              'provider': 'password'
            });
          });
        } else {
          bootbox.alert('Register Error: ' + res.error.code);
        }
      });
      evt.preventDefault();
      return false;
    });
    $('.logout_btn').on('click', function(evt) {
      foundry.logout();
      return location.reload();
    });
  });

}).call(this);
